import { Suspense, lazy, useEffect, useState } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import Modal from 'components/modal'
import { Grid, Row } from 'components/grid'
import Heading from 'components/heading'
import Passage from 'components/passage'
import Button from 'components/button'
import getProjects from 'generators/getProjects'

import styles from 'styles/home.module.css'

const Canvas = lazy(() => import('lazy/canvas'))
const Bokeh = lazy(() => import('scenes/bokeh'))

const getStaticProps = getProjects

const Home = ({ projects }) => {
  const [bokehBg, setBokehBg] = useState()
  const [modal, setModal] = useState(null)

  useEffect(() => {
    setBokehBg(
      window
        .getComputedStyle(document.documentElement)
        .getPropertyValue('--bokeh-bg')
        .trim()
    )
  }, [])

  const fallbackCanvas = <div className={styles.bokehPlaceholder} />

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Suspense fallback={fallbackCanvas}>
        <figure className={styles.bokehRendererContainer}>
          <Canvas dpr={[1, 10]} gl={{ alpha: false }} shadows camera={{ position: [0, -3.2, 40], fov: 3 }}>
            <color attach="background" args={[bokehBg]} />
            <Suspense fallback={null}>
              <Bokeh />
            </Suspense>
          </Canvas>
        </figure>
      </Suspense>

      <div className={styles.page}>
        <div className={styles.content}>
          <header className={styles.header}></header>
          <main className={styles.main}>
            <Grid className={[styles.section, styles.hello].join(' ')}>
              <Heading>Hi there.</Heading>
              <Passage as="p1">My name's <em>Ricky.</em></Passage>
              <Passage as="p1">I do <em>design + code.</em></Passage>
              <Passage as="p1"><em>I'm looking for the next big thing. Right now.</em></Passage>
              <Row>
                <Button spans={[3]}>Say Hi</Button>
                <Button spans={[3]}>See my CV</Button>
              </Row>
            </Grid>

            <Grid className={[styles.section, styles.projects].join(' ')}>
              <Heading as="h2">Projects</Heading>
              <Row>
                {projects.map(project => {
                  return (
                    <div
                      key={project.slug}
                      spans={[project.metadata.grid || 4]}
                    >{
                      project.metadata.title
                    }</div>
                  )
                })}
              </Row>
            </Grid>

            <Grid className={[styles.section, styles.about].join(' ')}>
              <Heading as="h2">About Me</Heading>
              <Row>
                <figure spans={[4]}></figure>
                <div spans={[8]}>
                  <Heading as="h3">My name's Ricky Romero.</Heading>
                  <Passage>I'm a designer and engineer in the scenic Bay Area of California. I've worked in web design and development (mobile and desktop) for over 10 years, and I'm dipping my toes in Swift now. I've worked on both marketing and product teams, and done both interaction and visual design.</Passage>
                  <Passage>I've produced my best work in roles leveraging both my design and engineering talents. That said, I understand that's an uncommon role, and can specialize in design when needed.</Passage>
                  <Passage>I'm open to both hybrid and remote work. Hybrid roles must be located south of Burlingame or Hayward.</Passage>
                  <Passage>In my spare time I like to take photos, build small hobby projects, and play video games (Nintendo for life).</Passage>
                  <Passage><strong>Follow me on <Link href="https://dribbble.com/RickyRomero"><a>Dribbble</a></Link> and <Link href="https://github.com/RickyRomero"><a>GitHub!</a></Link></strong></Passage>
                </div>
              </Row>
            </Grid>

            <Grid className={[styles.section, styles.letsDoThis].join(' ')}>
              <Heading>Only 1 left in stock.</Heading>
              <Passage as="p1"><em>I'm looking for work,</em> but won't be for much longer.</Passage>
              <Passage as="p1">What do you want to build together?</Passage>
              <Row>
                <Button spans={[3]}>Say Hi</Button>
                <Button spans={[3]}>See my CV</Button>
              </Row>
            </Grid>
          </main>
          <footer className={styles.footer}></footer>
        </div>
      </div>

      {modal ? (
        <Modal onDismiss={() => setModal(null)}>
          {modal}
        </Modal>
      ) : null}
    </>
  )
}

export default Home
export { getStaticProps }
